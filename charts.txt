Here are some useful charts you could generate from your database for your website:

### **Employee Insights**
1. **Employee Role Distribution** (Pie Chart)  
   - Shows the proportion of employees by role (admin, manager, user).  
2. **Employee Status Overview** (Bar Chart)  
   - Displays the count of active vs. inactive employees.  
3. **Employee Count Over Time** (Line Chart)  
   - Tracks how the number of employees has grown over time based on `created_at`.  
4. **Employee Birthdays by Month** (Bar Chart)  
   - Shows the number of employees born in each month.  

### **Client & Requests Analytics**
5. **Clients Per Employee** (Bar Chart)  
   - Displays the number of clients assigned to each employee.  
6. **Requests by Status** (Pie or Bar Chart)  
   - Shows the distribution of requests (pending, finishing, rejected, etc.).  
7. **Requests by Priority** (Pie Chart)  
   - Breaks down requests into low, medium, and high priority.  
8. **Requests by City** (Bar Chart)  
   - Displays the number of requests originating from different cities.  
9. **Requests Over Time** (Line Chart)  
   - Shows the trend of request creation over time.  
10. **Average Request Budget by Priority** (Bar Chart)  
   - Compares the average budget for each priority level.  

### **Property & Listing Analytics**
11. **Property Status Distribution** (Pie Chart)  
   - Displays the proportion of properties in different statuses.  
12. **Property Listings by City** (Bar Chart)  
   - Shows how many properties are listed in each city.  
13. **Property Type Breakdown** (Bar Chart)  
   - Differentiates between land and apartment listings.  
14. **Sale vs. Rent Properties** (Pie Chart)  
   - Compares the number of properties for sale vs. rent.  
15. **Average Property Price by City** (Bar Chart)  
   - Compares average prices of properties in different cities.  
16. **Property Size Distribution** (Histogram)  
   - Shows how property sizes are distributed.  

### **Geographical & Country-Based Insights**
17. **Clients by Country** (Map Chart or Bar Chart)  
   - Displays the number of clients per country.  
18. **Phone Numbers by Country** (Bar Chart)  
   - Shows how many phone numbers are registered in each country.  
19. **Requests by Region/Subregion** (Heatmap)  
   - Highlights the regions/subregions with the highest request activity.  

### **Notification & System Activity**
20. **Unread vs. Read Notifications** (Pie Chart)  
   - Shows the number of notifications read vs. unread.  
21. **Notifications by Type** (Bar Chart)  
   - Breaks down notifications into info, warning, and error categories.  
22. **Employee Notifications Received Over Time** (Line Chart)  
   - Tracks how many notifications employees receive over time.  


Here are SQL queries for the suggested charts:

---

### **Employee Insights**
#### 1Ô∏è‚É£ Employee Role Distribution (Pie Chart)
```sql
SELECT employee_role, COUNT(*) AS total 
FROM employees 
GROUP BY employee_role;
```

#### 2Ô∏è‚É£ Employee Status Overview (Bar Chart)
```sql
SELECT employee_status, COUNT(*) AS total 
FROM employees 
GROUP BY employee_status;
```

#### 3Ô∏è‚É£ Employee Count Over Time (Line Chart)
```sql
SELECT DATE(created_at) AS date, COUNT(*) AS total_employees 
FROM employees 
GROUP BY DATE(created_at) 
ORDER BY date;
```

#### 4Ô∏è‚É£ Employee Birthdays by Month (Bar Chart)
```sql
SELECT MONTH(employee_birthday) AS birth_month, COUNT(*) AS total 
FROM employees 
WHERE employee_birthday IS NOT NULL 
GROUP BY birth_month 
ORDER BY birth_month;
```

---

### **Client & Requests Analytics**
#### 5Ô∏è‚É£ Clients Per Employee (Bar Chart)
```sql
SELECT e.employee_name, COUNT(c.client_id) AS total_clients 
FROM employees e 
LEFT JOIN clients c ON e.employee_id = c.employee_id 
GROUP BY e.employee_name 
ORDER BY total_clients DESC;
```

#### 6Ô∏è‚É£ Requests by Status (Pie or Bar Chart)
```sql
SELECT request_state, COUNT(*) AS total 
FROM requests 
GROUP BY request_state;
```

#### 7Ô∏è‚É£ Requests by Priority (Pie Chart)
```sql
SELECT request_priority, COUNT(*) AS total 
FROM requests 
GROUP BY request_priority;
```

#### 8Ô∏è‚É£ Requests by City (Bar Chart)
```sql
SELECT ci.city_name, COUNT(r.request_id) AS total_requests 
FROM requests r 
JOIN cities ci ON r.city_id = ci.city_id 
GROUP BY ci.city_name 
ORDER BY total_requests DESC;
```

#### 9Ô∏è‚É£ Requests Over Time (Line Chart)
```sql
SELECT DATE(created_at) AS date, COUNT(*) AS total_requests 
FROM requests 
GROUP BY DATE(created_at) 
ORDER BY date;
```

#### üîü Average Request Budget by Priority (Bar Chart)
```sql
SELECT request_priority, AVG(request_budget) AS avg_budget 
FROM requests 
GROUP BY request_priority 
ORDER BY avg_budget DESC;
```

---

### **Property & Listing Analytics**
#### 1Ô∏è‚É£1Ô∏è‚É£ Property Status Distribution (Pie Chart)
```sql
SELECT ps.property_status_name, COUNT(p.property_id) AS total 
FROM properties p 
JOIN property_status ps ON p.property_status_id = ps.property_status_id 
GROUP BY ps.property_status_name;
```

#### 1Ô∏è‚É£2Ô∏è‚É£ Property Listings by City (Bar Chart)
```sql
SELECT ci.city_name, COUNT(p.property_id) AS total_properties 
FROM properties p 
JOIN cities ci ON p.city_id = ci.city_id 
GROUP BY ci.city_name 
ORDER BY total_properties DESC;
```

#### 1Ô∏è‚É£3Ô∏è‚É£ Property Type Breakdown (Bar Chart)
```sql
SELECT 
    SUM(CASE WHEN land_id IS NOT NULL THEN 1 ELSE 0 END) AS land_count,
    SUM(CASE WHEN apartment_id IS NOT NULL THEN 1 ELSE 0 END) AS apartment_count 
FROM properties;
```

#### 1Ô∏è‚É£4Ô∏è‚É£ Sale vs. Rent Properties (Pie Chart)
```sql
SELECT 
    SUM(CASE WHEN property_sale = TRUE THEN 1 ELSE 0 END) AS for_sale,
    SUM(CASE WHEN property_rent = TRUE THEN 1 ELSE 0 END) AS for_rent 
FROM properties;
```

#### 1Ô∏è‚É£5Ô∏è‚É£ Average Property Price by City (Bar Chart)
```sql
SELECT ci.city_name, AVG(p.property_price) AS avg_price 
FROM properties p 
JOIN cities ci ON p.city_id = ci.city_id 
GROUP BY ci.city_name 
ORDER BY avg_price DESC;
```

#### 1Ô∏è‚É£6Ô∏è‚É£ Property Size Distribution (Histogram)
```sql
SELECT property_size, COUNT(*) AS total_properties 
FROM properties 
GROUP BY property_size 
ORDER BY property_size;
```

---

### **Geographical & Country-Based Insights**
#### 1Ô∏è‚É£7Ô∏è‚É£ Clients by Country (Map Chart or Bar Chart)
```sql
SELECT co.country_name, COUNT(c.client_id) AS total_clients 
FROM clients c 
JOIN employees e ON c.employee_id = e.employee_id
JOIN employee_subregions es ON e.employee_id = es.employee_id
JOIN subregions sr ON es.subregion_id = sr.subregion_id
JOIN regions r ON sr.region_id = r.region_id
JOIN countries co ON r.country_id = co.country_id
GROUP BY co.country_name 
ORDER BY total_clients DESC;
```

#### 1Ô∏è‚É£8Ô∏è‚É£ Phone Numbers by Country (Bar Chart)
```sql
SELECT co.country_name, COUNT(p.phone_id) AS total_phones 
FROM phones p 
JOIN countries co ON p.country_id = co.country_id 
GROUP BY co.country_name 
ORDER BY total_phones DESC;
```

#### 1Ô∏è‚É£9Ô∏è‚É£ Requests by Region/Subregion (Heatmap)
```sql
SELECT sr.subregion_name, COUNT(r.request_id) AS total_requests 
FROM requests r 
JOIN cities ci ON r.city_id = ci.city_id
JOIN subregions sr ON ci.subregion_id = sr.subregion_id 
GROUP BY sr.subregion_name 
ORDER BY total_requests DESC;
```

---

### **Notification & System Activity**
#### 2Ô∏è‚É£0Ô∏è‚É£ Unread vs. Read Notifications (Pie Chart)
```sql
SELECT notification_status, COUNT(*) AS total 
FROM notifications 
GROUP BY notification_status;
```

#### 2Ô∏è‚É£1Ô∏è‚É£ Notifications by Type (Bar Chart)
```sql
SELECT notification_type, COUNT(*) AS total 
FROM notifications 
GROUP BY notification_type;
```

#### 2Ô∏è‚É£2Ô∏è‚É£ Employee Notifications Received Over Time (Line Chart)
```sql
SELECT DATE(notification_created_at) AS date, COUNT(*) AS total_notifications 
FROM notifications 
GROUP BY DATE(notification_created_at) 
ORDER BY date;
```

---

Would you like me to optimize or modify any query to fit a specific requirement? üöÄ